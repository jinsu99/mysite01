[mysite 장고 프로젝트 만들기]
0. 헷갈리면 django_practices 프로젝트의 readme 참고

1. django libaryr 설치        (venv) pip install django

2. mysqlclient 설치           (venv) pip install mysqlclient

3. django project 생성        (venv) django-admin startproject 프로젝트명

4. 디렉토리 정리 : pycharm프로젝트와 장고 프로젝트 일치시키기

5. 초기 설정(setting.py)
    1) TIMEZONE 설정 (line108)
        TIME_ZONE = 'Asia/Seoul'
    2) DATABASE 설정 (line76)
        DATABASES = {
            'default': {
                'ENGINE': 'django.db.backends.mysql',
                'NAME': 'webdb',
                'USER': 'webdb',
                'PASSWORD': 'webdb',
                'HOST': 'localhost',
                'PORT': 3306
            }
        }
    3) DATETIME FORMAT 설정 : 전역 설정 (filter를 사용할수도 있다)
        DATETIME_FORMAT = "Y-m-d P h:i:s
           LION = False
           USE_TZ = False

6. admin 어플리케이션 삭제하기(일단 주석)
    1) settings.py
    INSTALLED_APPS = [
        # 'django.contrib.admin',
        'django.contrib.auth',
        'django.contrib.contenttypes',
        'django.contrib.sessions',
        'django.contrib.messages',
        'django.contrib.staticfiles',
    ]
    2) urls.py : admin 관련 매핑 주석처리
    # from django.contrib import admin
    from django.urls import path

    urlpatterns = [
        # path('admin/', admin.site.urls),
        path('', mainviews.index),
    ]


7. ORM 적용하고 mysql5.1x 인 경우 manage.py 수정
    from django.db.backends.mysql.base import DatabaseWrapper
    DatabaseWrapper.data_types['DateTimeField'] = 'datetime'

8. Apoplication들의 통합v templates 디렉토리 만들기
    1) 디렉토리 생성
        mysite01
        |--- templates
    2) templates 디렉토리 설정(settings.py/line57)
        import os'DIRS': [os.path.join(BASE_DIR, 'templates')]

9. static 파일 (css,js,image) 설정 : mysite자료 다운로드받아서 디렉토리에 맞게 넣기
        mysite01
        |--- templates
                |--- board
                |---
        |--- statics
                |--- css
                |--- images
                |--- js

10. python manage.py startapp main : 장고프로젝트 main 생성

11. path 추가하고,  view 설정한다음 runserver → css가 적용되지 않아서 html이 깨진다.
    1) path (urls.py)
        # from django.contrib import admin
        from django.urls import path
        import main.views as mainviews

        urlpatterns = [
            # path('admin/', admin.site.urls),
            path('', mainviews.index),
        ]
    2) view (view.py)
        def index(request):
            return render(request, 'main/index.html')

12. static폴더의 파일들 처리가 필요(매핑작업)
    1)  setting.py
        > BASE_DIR 은 현재 프로젝트의 기본 디렉터리를 의미 + static
        > assets으로 받아서 해당 디렉토리로 접근해 매핑
        > 디렉터리는 튜플로 받아오기 때문에 콤마(,) 사용에 주의하자
        --------------------------------------
        STATICFILES_DIRS = (
            os.path.join(BASE_DIR, 'statics'),
        )

        STATIC_URL = '/assets/'

13. 매핑한 static폴더의 파일 사용하기 : static 디렉토리가 아니라 assets로 접근
    (예) <img id="profile" src="assets/images/django-logo.png">

14. .gitignore 잊지말 것
15. 사전 설정 끝났다. 어플리케이션 추가하고, path,view 반복작업하며 mysite 완성하자